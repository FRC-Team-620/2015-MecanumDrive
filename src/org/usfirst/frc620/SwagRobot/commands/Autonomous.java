package org.usfirst.frc620.SwagRobot.commands;
import edu.wpi.first.wpilibj.AnalogChannel;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc620.SwagRobot.Robot;
import org.usfirst.frc620.SwagRobot.RobotMap;
import org.usfirst.frc620.SwagRobot.OI;
import edu.wpi.first.wpilibj.Joystick;
import org.usfirst.frc620.SwagRobot.subsystems.DriveTrain;
/**
 *
 */
public class  Autonomous extends Command {
    private AnalogChannel distanceSensor = RobotMap.drivePIDdistanceSensor;
    public Autonomous() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveTrain);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }
    
    
    // Called just before this Command runs the first time
    protected void initialize() {
        
 
        System.out.println("Autonomous Enabled");
    }
    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
        
        double d = distanceSensor.getVoltage()/(0.0098);
        System.out.println("Voltage: "+d);
        
        if(d >= 30)
        
        {
           Robot.driveTrain.mecanumDrive(0,0,-.2, 0);
        }
        else{
            Robot.driveTrain.mecanumDrive(0, .5, 0, 0);
        }
        
        //        Robot.driveTrain.setSpeed(joystickL.getX(), joystickL.getY());


//        System.out.println("Joystick: " + joystickL.getX() + ", " + joystickL.getY() + ", " + joystickL.getTwist());
//        System.out.println("L: " + Robot.driveTrain.getL() + " R: " + Robot.driveTrain.getR());
        
       
    }
        
    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }
    // Called once after isFinished returns true
    protected void end() {
    }
    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
